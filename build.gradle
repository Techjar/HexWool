buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0.0"
group= "com.techjar.hexwool" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HexWool"

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    mappings = "stable_39"

    replace "@RAW_VERSION@", project.version

	//project.version += "."+System.getenv().BUILD_NUMBER

    replace "@VERSION@", project.version
    replaceIn "HexWool.java"

    project.version = project.minecraft.version + "-" + project.version
}

jar {
    exclude "**/*.psd"
}

repositories {
     maven { // The repo from which to get waila
         name "TehNut Repo"
         url "http://tehnut.info/maven"
     }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
